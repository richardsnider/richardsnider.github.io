# "^" key is reserved for a parent object's general definition/hyperlinks
^: # information for how to query the data in this file
  install: sudo curl -Lk github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /bin/yq && sudo chmod +x /bin/yq
  docs: https://mikefarah.gitbook.io/yq/recipes
  examples:
    descending-sort: yq --csv-separator '-' '.|keys|sort_by(.)|reverse|@csv' notes.yaml
    print-full-paths: yq '..|select(kind=="scalar")|{(path|join(".")):.}' notes.yaml
    filter-to-path: yq '..|select(.=="*sql*")' notes.yaml
    random-sort-order-subset: yq '.linux.practice|shuffle|.[0:3]' notes.yaml
    multiple-files: yq --no-doc '{filename:.}|keys' data/**/*.yaml data/.*/**/*.yaml data/**/.*/*.yaml
    map-elements: yq 'map(select(.type=="covalent"))' notes.yaml
    random-array-of-numbers: yq 'range(10)|shuffle' notes.yaml
browser:
  cache: https://developer.mozilla.org/en-US/docs/Web/API/Cache
  chrome:
    ^: https://developer.chrome.com/docs/
    devtools: https://developer.chrome.com/docs/devtools/overview/
    source-code: chromium is the open source component https://github.com/chromium/chromium
    v8: javascript engine https://github.com/v8/v8
  cookie:
    ^: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies
    type:
      ^: https://www.cloudflare.com/learning/privacy/what-are-cookies/
      authentication:
      persistent:
      session:
      tracking:
      zombie:
    first-party:
    third-party:
  css:
    ^: cascading style sheets https://developer.mozilla.org/en-US/docs/Web/CSS
    example:
      - https://htmlcheatsheet.com/css/
      - 58 bytes of css that look great anywhere https://news.ycombinator.com/item?id=32972004
  html:
    ^: https://developer.mozilla.org/en-US/docs/Web/HTML
    csp: Content Security Policy https://www.w3.org/TR/CSP/
    dom: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model
    example:
      ^: https://htmlcheatsheet.com/
  pwa: progressive web app https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps
  storage:
    ^: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API
    local: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage
    session: https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage
  wasm: web assembly https://developer.mozilla.org/en-US/docs/WebAssembly
  worker:
    ^: https://developer.mozilla.org/en-US/docs/Web/API/Worker
    service: service worker https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API
    web: web worker https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API
  xss:
    ^: cross site scripting https://www.cloudflare.com/learning/security/threats/cross-site-scripting/
cloud:
  ^: https://www.cloudflare.com/learning/cloud/what-is-the-cloud/ https://en.wikipedia.org/wiki/Cloud_computing
  aws:
    ^: Amazon Web Services https://docs.aws.amazon.com/
    ec2:
      asg:
        - https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html#available-metrics
    iam:
    s3:
    vpc:
    note:
      - https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html#available-metrics
      - https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_TargetTrackingConfiguration.html
      - https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints.html
      - https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_aws_deny-ip.html
      - https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html
      - https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html
      - https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TagSpecification.html
      - https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TagSpecification.html
      - https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html

  cloudflare:
    ^: https://www.cloudflare.com/learning/what-is-cloudflare/
    cdn: content delivery network https://www.cloudflare.com/learning/cdn/what-is-a-cdn/
    firewall: https://www.cloudflare.com/learning/cloud/what-is-a-cloud-firewall/
  gcp:
    ^: Google Cloud Platform https://cloud.google.com/docs
    sql:
    vpc:
    notes:
      - https://cloud.google.com/certificate-authority-service/docs/using-cel
  hybrid-cloud: https://www.cloudflare.com/learning/cloud/what-is-hybrid-cloud/
  iac:
    ^: infrastructure as code
    crossplane:
      ^: https://crossplane.io/docs/
      source: https://github.com/crossplane/crossplane
      aws-provider: https://doc.crds.dev/github.com/crossplane/provider-aws/aws.crossplane.io/ProviderConfig/v1beta1@v0.31.0
    terraform:
      ^:
      modules: https://registry.terraform.io/browse/modules
      provider:
        aws: https://registry.terraform.io/providers/hashicorp/aws/latest/docs
        gcp: https://registry.terraform.io/providers/hashicorp/google/latest/docs
      source: https://github.com/hashicorp/terraform
  multi-cloud: https://www.cloudflare.com/learning/cloud/what-is-multicloud/
  twilio:
    sendgrid:
      ^: https://docs.sendgrid.com/onboarding/email-api
      api: https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api
      settings: https://docs.sendgrid.com/ui/account-and-settings/mail
code:
  ^: https://github.com/collections/programming-languages
  go:
    ^: https://go.dev/doc/ https://github.com/golang/go
    example:
      server: |
        package main

        import (
        	"encoding/json"
        	"fmt"
        	"net"
        	"os"
        	"os/exec"
        	"time"

        	"github.com/samber/lo"
        )

        func main() {
        	port, _ := lo.Coalesce(os.Getenv("APP_PORT"), "80")

        	ln, err := net.Listen("tcp", ":"+port)
        	if err != nil {
        		panic(err)
        	}

        	fmt.Println("Listening on port " + port)

        	for {
        		conn, err := ln.Accept()
        		if err != nil {
        			fmt.Println(err)
        			continue
        		}

        		go func(c net.Conn) {
        			fmt.Println("request received")
        			commandOutput, err := exec.Command("curl", "ifconfig.me/all.json").Output()
        			if err != nil {
        				fmt.Println(err)
        				return
        			}

        			requestData := map[string]interface{}{
        				"id":           lo.RandomString(32, []rune{'a', 'b', 'c'}),
        				"timestamp":    time.Now().UTC().UnixMicro(),
        				"remoteAddr":   c.RemoteAddr().String(),
        				"curlResponse": string(commandOutput),
        			}

        			jsonBytes, err := json.Marshal(requestData)
        			if err != nil {
        				fmt.Println(err)
        				return
        			}

        			err = os.WriteFile("/tmp/data.json", jsonBytes, 0644)
        			if err != nil {
        				fmt.Println(err)
        				return
        			}

        			fileBytes, err := os.ReadFile("/tmp/data.json")
        			if err != nil {
        				fmt.Println(err)
        				return
        			}

        			fmt.Println(string(fileBytes))
        			c.Write([]byte("HTTP/1.0 200 OK\r\n\r\n"))
        			c.Close()
        		}(conn)
        	}
        }
    notes:
      - https://github.com/valyala/goloris/blob/master/goloris.go
      - https://golangcode.com/print-the-current-memory-usage/
      - https://golang.google.cn/pkg/os/signal/
      - https://github.com/lizrice/strace-from-scratch
      - vulnerability management https://go.dev/blog/vuln
      - https://github.com/zcalusic/sysinfo
      - how to write golang https://go.dev/doc/code
    project-layout: https://github.com/golang-standards/project-layout
    ref:
      ^: https://go.dev/ref/spec
      context:
        notes:
          - https://www.linkedin.com/pulse/its-time-understand-golang-contexts-lucas-schenkel-schieferdecker/
    std:
      ^: standard library https://pkg.go.dev/std
  js:
    ^: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference
    api:
      ^: https://developer.mozilla.org/en-US/docs/Web/API
      fetch: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
    closure: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures
    example:
      random-strings: setInterval(() => console.log(require('node:crypto').randomBytes(100).toString('base64url')), 1000);
      random-bigint: setInterval(() => console.log((BigInt('0x' + require('node:crypto').randomBytes(100).toString('hex')) % (10n ** 12n)).toString()), 1000);
      crypto-random: |
        const randomBytes = crypto.getRandomValues(new Buffer.alloc(10));
        const randomString = Array.from(randomBytes).map(i => String.fromCharCode(i%54+48)).join("");
        console.log(randomString);
        console.log(randomBytes.toString('base64url'));
      http-fs: |
        const crypto = require('node:crypto');
        const fs = require('node:fs');
        const http = require('node:http');

        const fd = fs.openSync('/tmp/data.txt', 'a');
        fs.closeSync(fd);

        const handle = async (req, res) => {
          let body = '';
          req.on('data', chunk => body += chunk);

          req.on('end', () => {
            const data = JSON.parse(body);

            if (typeof data.string !== 'string' || typeof data.position !== 'number') {
              res.statusCode = 400;
              res.end('Bad Request');
              return;
            }

            console.log(data);

            const fd = fs.openSync('/tmp/data.txt', 'r+');
            fs.writeSync(fd, data.string, data.position, data.string.length, null);
            fs.closeSync(fd);

            const content = fs.readFileSync('/tmp/data.txt', 'utf-8');
            console.log(content);
            res.end();
          });
        };

        const server = http.createServer(handle);
        server.listen(3000);

        setInterval(async () => {
          const response = await fetch('http://localhost:3000', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              string: crypto.randomBytes(5).toString('base64url') + '\n',
              position: 8 * (crypto.randomBytes(1).readUInt8() % 10)
            }),
          });

          console.log(await response.text());
        }, 1000);
    node:
      ^: https://nodejs.org/en/docs/
      npm:
        ^: https://docs.npmjs.com/
        example:
          npm-github-login: npm login --scope=@my_org --registry=https://npm.pkg.github.com
    promise:
      ^: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise
    typescript: https://www.typescriptlang.org/docs/
  vscode:
    ^: https://code.visualstudio.com/docs
comp-sci:
  ^: https://github.com/jwasham/coding-interview-university
  ai:
    diffusion: https://en.wikipedia.org/wiki/Diffusion_process
    machine-learning:
      tool:
        - https://dreamfusion3d.github.io/
        - https://github.com/nv-tlabs/GET3D
        - https://phenaki.video/index.html
      deep-learning: https://github.com/tensorflow/tensorflow
      neural-network: https://datadan.io/blog/neural-net-with-go (https://github.com/dwhitena/gophernet/blob/master/main.go)
  algorithm: https://github.com/trekhleb/javascript-algorithms
  big-o-notation:
    ^: https://www.freecodecamp.org/news/big-o-notation-why-it-matters-and-why-it-doesnt-1674cfa8a23c/
    example:
      - efficiency of a function as the number of elements (n) trends towards infinity
      - big o complexity chart http://biercoff.com/content/images/2016/07/Screenshot-2016-07-15-16-16-10.png
      - Big O notation https://en.wikipedia.org/wiki/Big_O_notation
  binary:
    byte:
      ^: arbitrary yet standard data size
      min-value: [0, 0b00000000, 0x00]
      max-value: [0b11111111, 07777, 255, 0xFF]
      unit:
        kB: { kilobyte: 2^10 }
        Ki: { kibibit: 2^10 }
        Mi: { mebibit: 2^20 }
        MB: { megabyte: 2^20 }
        GB: { gigabyte: 2^30 }
  encryption:
  ephemeral: Lasting for a very short time.
  hash:
  immutable: Not subject or susceptible to change.
  jit: just in time compilation https://www.freecodecamp.org/news/just-in-time-compilation-explained/
  normalize:
datastore:
  elk: https://www.elastic.co/what-is/elk-stack
  kafka:
    ^: event streaming application by apache https://kafka.apache.org/documentation/
    explanation:
      - https://www.kai-waehner.de/blog/2020/03/12/can-apache-kafka-replace-database-acid-storage-transactions-sql-nosql-data-lake/
      - https://materialize.com/blog/kafka-is-not-a-database/
      - https://logz.io/blog/kafka-vs-redis/#:~:text=Redis'%20in%2Dmemory%20database%20is,for%20longer%20periods%20of%20time.
    strimzi: k8s operator https://github.com/strimzi/strimzi-kafka-operator
  mongodb:
    change-streams: https://www.mongodb.com/docs/manual/changeStreams/
  redis: https://redis.io/docs/reference/
  sql:
    ^: https://www.digitalocean.com/community/tutorials/sqlite-vs-mysql-vs-postgresql-a-comparison-of-relational-database-management-systems
    mysql:
      ^: https://dev.mysql.com/doc/
      ddl: data definition language https://dev.mysql.com/doc/refman/8.0/en/sql-data-definition-statements.html
      transaction: https://dev.mysql.com/doc/refman/8.0/en/sql-transactional-statements.html
      locking: https://dev.mysql.com/doc/refman/8.0/en/lock-tables.html
      innodb: https://dev.mysql.com/doc/refman/8.0/en/innodb-introduction.html
      dump: mysqldump -h my_cluster.cluster-ro-abcdefghij.us-west-2.rds.amazonaws.com -u my_user --password --port=3306 --single-transaction --set-gtid-purged=OFF my_db my_table > my_sqldump.sql
      get-binlog: mysqlbinlog --read-from-remote-server --host=my_cluster.cluster-abcdefghij.us-west-2.rds.amazonaws.com --port=3306 --user admin --password --raw --verbose --result-file=/tmp/binlog
      example:
        maximum-RFC3339-date: select '9999-12-31T23:59:59Z';
        locks: select * from performance_schema.metadata_locks;
        processes: show full processlist;
        kill: kill 19465248
        rds-kill: CALL mysql.rds_kill(8145531);
        indexes: show indexes from my_db.my_table;
        show: |
          show engine innodb status;
          show variables;
          show binary logs; -- GRANT REPLICATION CLIENT ON *.* TO 'username'@'%';
          show binlog events in 'mysql-bin-changelog.007951' from 123 limit 1000; -- GRANT REPLICATION SLAVE ON *.* TO 'username'@'%';
          describe some_db.some_table;
        variable: |
          SET FOREIGN_KEY_CHECKS=0;
          SET sql_mode = '';
          SET GLOBAL innodb_lock_wait_timeout = 100;
        users: |
          select user, authentication_string, password_last_changed from mysql.user;
          CREATE USER 'someuser'@'%' IDENTIFIED BY '?????';
          ALTER USER 'someuser'@'%' IDENTIFIED BY '?????';
          drop USER 'someuers'@'localhost'
        permissions: |
          show grants for admin;
          GRANT USAGE ON *.* TO 'someuser'@'%'
          GRANT CREATE, PROCESS, RELOAD, EXECUTE, SELECT, INSERT, UPDATE, DELETE, SHOW VIEW ON `my_db1`.* TO 'someuser'@'%'
          GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, EXECUTE, TRIGGER ON *.* TO 'username'@'%' WITH GRANT OPTION
          REVOKE UPDATE ON `my_db1`.some_table FROM 'someuser'@'%';
          REVOKE ALL PRIVILEGES ON `my_db1`.* FROM 'someuser'@'%';
        tables: |
          select TABLE_NAME, TABLE_SCHEMA, TABLE_ROWS, AVG_ROW_LENGTH, DATA_LENGTH, INDEX_LENGTH, TABLE_COLLATION, UPDATE_TIME
          from information_schema.tables
          where TABLE_SCHEMA IN ('my_db1', 'my_db2')
          order by TABLE_ROWS desc;
        columns: |
          select TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE, COLUMN_DEFAULT, IS_NULLABLE 
          from information_schema.columns 
          where TABLE_SCHEMA IN ('my_db1', 'my_db2');
        add-foriegn-key: |
          ALTER TABLE some_db.some_table ADD CONSTRAINT some_constraint_name FOREIGN KEY (some_column) REFERENCES some_db.some_ref_table (`some_ref_column`) ON UPDATE RESTRICT ON DELETE RESTRICT;
          ALTER TABLE some_db.some_table DROP FOREIGN KEY some_constraint_name;
        string-based-foreign-keys: |
          SELECT KEY_COLUMN_USAGE.CONSTRAINT_NAME, KEY_COLUMN_USAGE.TABLE_NAME, KEY_COLUMN_USAGE.COLUMN_NAME, KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME, KEY_COLUMN_USAGE.REFERENCED_COLUMN_NAME, 
          COLUMNS.COLUMN_TYPE, 
          REFERENTIAL_CONSTRAINTS.UPDATE_RULE, REFERENTIAL_CONSTRAINTS.DELETE_RULE
          FROM information_schema.KEY_COLUMN_USAGE
          JOIN information_schema.COLUMNS on COLUMNS.COLUMN_NAME = KEY_COLUMN_USAGE.COLUMN_NAME and COLUMNS.TABLE_NAME = KEY_COLUMN_USAGE.TABLE_NAME
          JOIN information_schema.REFERENTIAL_CONSTRAINTS on REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME = KEY_COLUMN_USAGE.CONSTRAINT_NAME
          WHERE KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA IN ('my_db1', 'my_db2')
          AND COLUMNS.COLUMN_TYPE like '%char%';
        get-by-date: |
          select id, date_created
          from my_db1.sometable
          where date_create > DATE_SUB(curdate(), INTERVAL 1 WEEK)
          order by date_created desc;
    postgres: https://www.postgresql.org/docs/
    sqllite:
      ^: https://www.sqlite.org/docs.html
      cli: sqlite3 /var/lib/rancher/k3s/server/db/state.db
      compression: https://github.com/phiresky/sqlite-zstd
      litestream:
        ^: https://litestream.io/how-it-works/
        tips: https://litestream.io/tips/
        example:
          - https://mtlynch.io/litestream/
      query:
        - select value from kine where name = "/registry/apiregistration.k8s.io/apiservices/v1.events.k8s.io" order by create_revision desc limit 1
engineering:
  chem:
    compounds:
      H2O:
        names: [water, dihydrogen monoxide]
        type: polar
        boiling-point: 100C
        melting-point: 0C
        density: 1g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      NaCl:
        names: [salt, sodium chloride]
        type: ionic
        boiling-point: 1413C
        melting-point: 801C
        density: 2.16g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      C12H22O11:
        names: [sugar, sucrose]
        type: covalent
        boiling-point: 186C
        melting-point: 186C
        density: 1.587g/cm^3
        phase: solid
        bond: covalent
        polarity: polar
        solubility: polar
      Na2B4O7·10H2O:
        names: [borax, sodium borate]
        type: ionic
        boiling-point: 1575C
        melting-point: 741C
        density: 1.73g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      HCl:
        names: [hydrochloric acid]
        type: covalent
        boiling-point: -85C
        melting-point: -114C
        density: 1.18g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      NH3:
        names: [ammonia]
        type: covalent
        boiling-point: -33C
        melting-point: -78C
        density: 0.73g/cm^3
        phase: gas
        bond: covalent
        polarity: polar
        solubility: polar
      CH4:
        names: [methane]
        type: covalent
        boiling-point: -161C
        melting-point: -182C
        density: 0.717g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      O2:
        names: [oxygen]
        type: covalent
        boiling-point: -183C
        melting-point: -218C
        density: 1.429g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      O3:
        names: [ozone]
        type: covalent
        boiling-point: -112C
        melting-point: -192C
        density: 2.144g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      CO2:
        names: [carbon dioxide]
        type: covalent
        boiling-point: -57C
        melting-point: -78C
        density: 1.98g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      C3H8:
        names: [propane]
        type: covalent
        boiling-point: -42C
        melting-point: -187C
        density: 2.009g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      C2H5OH:
        names: [ethanol]
        type: covalent
        boiling-point: 78C
        melting-point: -114C
        density: 0.789g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      CH3COOH:
        names: [acetic acid]
        type: covalent
        boiling-point: 118C
        melting-point: 16C
        density: 1.049g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      NaOH:
        names: [sodium hydroxide]
        type: ionic
        boiling-point: 1388C
        melting-point: 318C
        density: 2.13g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      H2SO4:
        names: [sulfuric acid]
        type: covalent
        boiling-point: 337C
        melting-point: 10C
        density: 1.84g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      HNO3:
        names: [nitric acid]
        type: covalent
        boiling-point: 83C
        melting-point: -42C
        density: 1.51g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      HF:
        names: [hydrofluoric acid]
        type: covalent
        boiling-point: 19C
        melting-point: -83C
        density: 1.15g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      H3PO4:
        names: [phosphoric acid]
        type: covalent
        boiling-point: 158C
        melting-point: 42C
        density: 1.88g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      H2CO3:
        names: [carbonic acid]
        type: covalent
        boiling-point: 333C
        melting-point: 0C
        density: 1.67g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      C2H2:
        names: [acetylene]
        type: covalent
        boiling-point: -84C
        melting-point: -80C
        density: 1.097g/cm^3
        phase: gas
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      NH4OH:
        names: [ammonium hydroxide]
        type: covalent
        boiling-point: 37C
        melting-point: -57C
        density: 0.91g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      H2O2:
        names: [hydrogen peroxide]
        type: covalent
        boiling-point: 150C
        melting-point: -11C
        density: 1.45g/cm^3
        phase: liquid
        bond: covalent
        polarity: polar
        solubility: polar
      KCl:
        names: [potassium chloride]
        type: ionic
        boiling-point: 1420C
        melting-point: 770C
        density: 1.98g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      CaCO3:
        names: [calcium carbonate]
        type: ionic
        boiling-point: 825C
        melting-point: 1339C
        density: 2.71g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      MgSO4:
        names: [magnesium sulfate]
        type: ionic
        boiling-point: 850C
        melting-point: 1124C
        density: 2.66g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      KNO3:
        names: [potassium nitrate]
        type: ionic
        boiling-point: 400C
        melting-point: 334C
        density: 2.11g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      Na2CO3:
        names: [sodium carbonate]
        type: ionic
        boiling-point: 1633C
        melting-point: 851C
        density: 2.54g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      KOH:
        names: [potassium hydroxide]
        type: ionic
        boiling-point: 1320C
        melting-point: 360C
        density: 2.04g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      K2SO4:
        names: [potassium sulfate]
        type: ionic
        boiling-point: 1689C
        melting-point: 1069C
        density: 2.66g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      Na2SO4:
        names: [sodium sulfate]
        type: ionic
        boiling-point: 1429C
        melting-point: 884C
        density: 2.68g/cm^3
        phase: solid
        bond: ionic
        polarity: non-polar
        solubility: polar
      (C2H4)n:
        names: [polyethylene, plastic]
        type: covalent
        boiling-point: 135C
        melting-point: 115C
        density: 0.96g/cm^3
        phase: solid
        bond: covalent
        polarity: non-polar
        solubility: non-polar
      (C3H6)n:
        names: [polypropylene]
        type: covalent
        boiling-point: 176C
        melting-point: 130C
        density: 0.91g/cm^3
        phase: solid
        bond: covalent
        polarity: non-polar
        solubility: non-polar
    elements:
      hydrogen:
        protons: 1
        charge: +1
        period: 1
        group: 1
        type: non-metal
      helium:
        protons: 2
        charge: 0
        period: 1
        group: 18
        type: noble-gas
      lithium:
        protons: 3
        charge: +1
        period: 2
        group: 1
        type: alkali-metal
      beryllium:
        protons: 4
        charge: +2
        period: 2
        group: 2
        type: alkaline-earth-metal
      boron:
        protons: 5
        charge: +3
        period: 2
        group: 13
        type: metalloid
      carbon:
        protons: 6
        charge: +4
        period: 2
        group: 14
        type: non-metal
      nitrogen:
        protons: 7
        charge: -3
        period: 2
        group: 15
        type: non-metal
      oxygen:
        protons: 8
        charge: -2
        period: 2
        group: 16
        type: non-metal
      fluorine:
        protons: 9
        charge: -1
        period: 2
        group: 17
        type: halogen
      neon:
        protons: 10
        charge: 0
        period: 2
        group: 18
        type: noble-gas
      sodium:
        protons: 11
        charge: +1
        period: 3
        group: 1
        type: alkali-metal
      magnesium:
        protons: 12
        charge: +2
        period: 3
        group: 2
        type: alkaline-earth-metal
      aluminum:
        protons: 13
        charge: +3
        period: 3
        group: 13
        type: metal
      silicon:
        protons: 14
        charge: +4
        period: 3
        group: 14
        type: metalloid
      phosphorus:
        protons: 15
        charge: -3
        period: 3
        group: 15
        type: non-metal
      sulfur:
        protons: 16
        charge: -2
        period: 3
        group: 16
        type: non-metal
      chlorine:
        protons: 17
        charge: -1
        period: 3
        group: 17
        type: halogen
      argon:
        protons: 18
        charge: 0
        period: 3
        group: 18
        type: noble-gas
      potassium:
        protons: 19
        charge: +1
        period: 4
        group: 1
        type: alkali-metal
      calcium:
        protons: 20
        charge: +2
        period: 4
        group: 2
        type: alkaline-earth-metal
      scandium:
        protons: 21
        charge: +2
        period: 4
        group: 3
        type: transition-metal
      titanium:
        protons: 22
        charge: +2
        period: 4
        group: 4
        type: transition-metal
      vanadium:
        protons: 23
        charge: +2
        period: 4
        group: 5
        type: transition-metal
      chromium:
        protons: 24
        charge: +2
        period: 4
        group: 6
        type: transition-metal
      manganese:
        protons: 25
        charge: +2
        period: 4
        group: 7
        type: transition-metal
      iron:
        protons: 26
        charge: +2
        period: 4
        group: 8
        type: transition-metal
      cobalt:
        protons: 27
        charge: +2
        period: 4
        group: 9
        type: transition-metal
      nickel:
        protons: 28
        charge: +2
        period: 4
        group: 10
        type: transition-metal
      copper:
        protons: 29
        charge: +2
        period: 4
        group: 11
        type: transition-metal
      zinc:
        protons: 30
        charge: +2
        period: 4
        group: 12
        type: transition-metal
      gallium:
        protons: 31
        charge: +3
        period: 4
        group: 13
        type: metal
      germanium:
        protons: 32
        charge: +4
        period: 4
        group: 14
        type: metalloid
      arsenic:
        protons: 33
        charge: -3
        period: 4
        group: 15
        type: non-metal
      selenium:
        protons: 34
        charge: -2
        period: 4
        group: 16
        type: non-metal
      bromine:
        protons: 35
        charge: -1
        period: 4
        group: 17
        type: halogen
      krypton:
        protons: 36
        charge: 0
        period: 4
        group: 18
        type: noble-gas
      palladium:
        protons: 46
        charge: +2
        period: 5
        group: 10
        type: transition-metal
      silver:
        protons: 47
        charge: +2
        period: 5
        group: 11
        type: transition-metal
      cadmium:
        protons: 48
        charge: +2
        period: 5
        group: 12
        type: transition-metal
      indium:
        protons: 49
        charge: +3
        period: 5
        group: 13
        type: metal
      tin:
        protons: 50
        charge: +4
        period: 5
        group: 14
        type: metal
      antimony:
        protons: 51
        charge: -3
        period: 5
        group: 15
        type: metalloid
      tellurium:
        protons: 52
        charge: -2
        period: 5
        group: 16
        type: non-metal
      iodine:
        protons: 53
        charge: -1
        period: 5
        group: 17
        type: halogen
      xenon:
        protons: 54
        charge: 0
        period: 5
        group: 18
        type: noble-gas
      platinum:
        protons: 78
        charge: +2
        period: 6
        group: 10
        type: transition-metal
      gold:
        protons: 79
        charge: +2
        period: 6
        group: 11
        type: transition-metal
      mercury:
        protons: 80
        charge: +2
        period: 6
        group: 12
        type: transition-metal
      thallium:
        protons: 81
        charge: +3
        period: 6
        group: 13
        type: metal
      lead:
        protons: 82
        charge: +4
        period: 6
        group: 14
        type: metal
      bismuth:
        protons: 83
        charge: -3
        period: 6
        group: 15
        type: metal
      polonium:
        protons: 84
        charge: -2
        period: 6
        group: 16
        type: metal
      astatine:
        protons: 85
        charge: -1
        period: 6
        group: 17
        type: halogen
      radon:
        protons: 86
        charge: 0
        period: 6
        group: 18
        type: noble-gas
      uranium:
        protons: 92
        charge: +4
        period: 7
        group: 3
        type: actinide
      plutonium:
        protons: 94
        charge: +4
        period: 7
        group: 3
        type: actinide
    doping: https://en.wikipedia.org/wiki/Doping_(semiconductor)
  electronics:
    lorentz-force: F = q(E + v x B)
    coulombs-law: F = k(q1q2)/r^2
    faradays-law: V = -dΦ/dt
    maxwell-equations:
      gauss-law-magnetism: ∇⋅B = 0
      faraday-law: ∇xE = -∂B/∂t
      ampere-law: ∇xB = μ₀J + μ₀ε₀∂E/∂t
    ohms-law: V = IR
    kirchhoffs-law:
      current: ΣI = 0
      voltage: ΣV = 0
    resistor:
      ohm: Ω
      power: P = IV = (I^2)R = (V^2)/R
      series: R = R1 + R2 + R3
      parallel: 1/R = 1/R1 + 1/R2 + 1/R3
    inductor:
      henry: H
      energy: W = 1/2LI^2
      voltage: V = L(dI/dt)
      series: L = L1 + L2 + L3
      parallel: 1/L = 1/L1 + 1/L2 + 1/L3
    capacitor:
      farad: F
      energy: W = 1/2CV^2
      voltage: V = Q/C
      series: C = C1 + C2 + C3
      parallel: 1/C = 1/C1 + 1/C2 + 1/C3
    diode:
      forward-voltage: 0.7V
      reverse-voltage: 50V
      current: I = I_s(e^(V/VT) - 1)
      power: P = IV
      rectifier:
        half-wave: Vdc = Vm/π
        full-wave: Vdc = 2Vm/π
        bridge: Vdc = 2Vm/π
    transistor:
      bjt:
        npn:
          current: Ic = β*Ib
          voltage: Vce = Vcc - Ic*Rc
          power: P = IV
        pnp:
          current: Ic = β*Ib
          voltage: Vce = Vcc + Ic*Rc
          power: P = IV
      mosfet:
        n-channel:
          current: Id = k(Vgs - Vt)^2
          voltage: Vds = Vdd - Id*Rd
          power: P = IV
        p-channel:
          current: Id = k(Vgs - Vt)^2
          voltage: Vds = Vdd + Id*Rd
          power: P = IV
      op-amp:
        inverting: Vout = -Rf/R1 * Vin
        non-inverting: Vout = (1 + Rf/R1) * Vin
        summing: Vout = -Rf/R1 * Vin1 - Rf/R2 * Vin2
        difference: Vout = (Rf/R1) * (Vin1 - Vin2)
  math:
    linear-algebra:
      cross-product:
        calculation: A x B = (A2B3 - A3B2)i + (A3B1 - A1B3)j + (A1B2 - A2B1)k
        magnitude: "|A x B| = |A||B|sin(θ)"
        direction: right-hand-rule
        area: A = |A x B|
        volume: V = |A x B| * h
        examples:
          - force: F = q(v x B)
          - torque: τ = r x F
          - angular-momentum: L = r x p
          - magnetic-moment: μ = I x A
          - angular-velocity: ω = r x v
      dot-product:
        calculation: A • B = A1B1 + A2B2 + A3B3
        magnitude: "|A • B| = |A||B|cos(θ)"
        projection: A • B = |A||B|cos(θ)
        angle: cos(θ) = A • B / |A||B|
      matrix:
        transpose: A^T
        inverse: A^-1
        determinant:
          symbol: "|A|"
          2x2: ad - bc
          3x3: a(ei - fh) - b(di - fg) + c(dh - eg)
          4x4: a(ei - fh) - b(di - fg) + c(dh - eg) - d(eh - fg)
        trace: tr(A)
        adjoint: adj(A)
        rank: rank(A)
        eigenvalue: λ
        eigenvector: v
        diagonalization: A = PDP^-1
        singular-value-decomposition: A = UΣV^T
        cholesky-decomposition: A = LL^T
        qr-decomposition: A = QR
        lu-decomposition: A = LU
        svd: https://en.wikipedia.org/wiki/Singular-value_decomposition
        qr: https://en.wikipedia.org/wiki/QR_decomposition
        lu: https://en.wikipedia.org/wiki/LU_decomposition
        cholesky: https://en.wikipedia.org/wiki/Cholesky_decomposition
        diagonal: https://en.wikipedia.org/wiki/Diagonal_matrix
        identity: https://en.wikipedia.org/wiki/Identity_matrix
        orthogonal: https://en.wikipedia.org/wiki/Orthogonal_matrix
        symmetric: https://en.wikipedia.org/wiki/Symmetric_matrix
    calculus:
      derivative:
        symbol: d/dx
        definition: f'(x) = lim(h->0) (f(x + h) - f(x)) / h
        rules:
          constant: d/dx(c) = 0
          power: d/dx(x^n) = nx^(n-1)
          sum: d/dx(f(x) + g(x)) = f'(x) + g'(x)
          product: d/dx(f(x) * g(x)) = f'(x)g(x) + f(x)g'(x)
          quotient: d/dx(f(x) / g(x)) = (f'(x)g(x) - f(x)g'(x)) / g(x)^2
          chain: d/dx(f(g(x))) = f'(g(x)) * g'(x)
        notation:
          - f'(x) = df/dx
          - f''(x) = d^2f/dx^2
      integral:
        symbol: ∫
        definition: F'(x) = f(x)
        rules:
          constant: ∫c dx = cx + C
          power: ∫x^n dx = x^(n+1) / (n+1) + C
          sum: ∫(f(x) + g(x)) dx = ∫f(x) dx + ∫g(x) dx
          product: ∫f(x)g(x) dx = f(x)∫g(x) dx - ∫f'(x)∫g(x) dx
          quotient: ∫f(x) / g(x) dx = ∫f(x) dx / ∫g(x) dx
          substitution: ∫f(g(x))g'(x) dx = ∫f(u) du
          by-parts: ∫u dv = uv - ∫v du
        notation:
          - ∫f(x) dx = F(x) + C
          - ∫f(x) dx = ∫f(x) dx
      limit:
        symbol: lim
        notation: lim(x->c) f(x)
        definition: lim(x->c) f(x) = L if for all ε > 0 there exists δ > 0 such that 0 < |x
    (-1)^x:
      equivalent: (i^2)^x == i^(2x)
      coincidentally: i^(2/pi) == e^i
      euler: (e^pi)^(i*x) == e^(i*pi*x)
      trig: cos(pi*x) + i*sin(pi*x)
      sin-series: x - x^3/3! + x^5/5! - x^7/7! + x^9/9! - x^11/11! + x^13/13! - x^15/15!...
      cos-series: 1 - x^2/2! + x^4/4! - x^6/6! + x^8/8! - x^10/10! + x^12/12! - x^14/14!...
      e-series: 1 + i*pi*x - pi^2*x^2/2! - i*pi^3*x^3/3! + pi^4*x^4/4! + i*pi^5*x^5/5! - pi^6*x^6/6! - i*pi^7*x^7/7!...

      derivative: i*pi*(-1)^x
    pythagorean:
      - 1 + 1 = √2
      - (√2/2)^2 + (√2/2)^2 = 1
      - (√3/2)^2 + (1/2)^2 = 1
      - 3^2 + 4^2 = 5^2
      - 5^2 + 12^2 = 13^2
    sin(pi/6): 1/2
    sin(pi/4): √2/2
    sin(pi/3): √3/2

    √2:
      decimal: 1.41421356237
      inverse: 0.70710678118
    √3:
      decimal: 1.73205080757
      inverse: 0.57735026919
    pi:
      decimal: 3.14159265359
      inverse: 0.31830988618
      pi/4: 0.78539816339
      series: 4*(1 - 1/3 + 1/5 - 1/7 + 1/9 - 1/11 + 1/13 - 1/15 + 1/17 - 1/19 + 1/21 - 1/23 + 1/25...)
    euler:
      decimal: 2.71828182846
      inverse: 0.36787944117
      series: 1/0! + 1/1! + 1/2! + 1/3! + 1/4! + 1/5! + 1/6! + 1/7! + 1/8! + 1/9! + 1/10!...
      identity: e^(i*pi) + 1 = 0
    golden-ratio:
      decimal: 1.61803398875
      inverse: 0.61803398875
      fibonacci: [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233]
k8s:
  ^: kubernetes https://kubernetes.io/docs/concepts/overview/components/ https://github.com/kubernetes/kubernetes/tree/master/pkg
  cncf:
    ^: cloud native compute foundation https://landscape.cncf.io/card-mode?grouping=no&sort=stars
    certified-k8s-installers: https://landscape.cncf.io/card-mode?category=certified-kubernetes-installer&grouping=category
  cni:
    ^: container network interface https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/
    interface-name: cni0
    notes:
      - https://itnext.io/kubernetes-networking-behind-the-scenes-39a1ab1792bb
    type:
      cilium:
        ^: eBPF based https://github.com/cilium/cilium
      flannel:
        vxlan-device: https://github.com/flannel-io/flannel/blob/master/backend/vxlan/device.go
        netlink-dependency: https://github.com/vishvananda/netlink
        source: https://github.com/flannel-io/flannel
        note:
          - no network policy capability
      calico:
  cluster-data:
    alias: backing-store
    etcd: https://etcd.io/docs https://github.com/etcd-io/etcd
  cloud-controller-manager:
  controller-manager:
  cri:
    ^: container runtime interface https://kubernetes.io/docs/concepts/architecture/cri/
    container:
      ^: https://en.wikipedia.org/wiki/OS-level_virtualization
    cri-o: https://github.com/cri-o/cri-o
    containerd:
      ^: https://github.com/containerd/containerd/tree/main/docs
      cli:
        example:
          - ctr version
          - ctr image pull docker.io/library/hello-world:latest
          - ctr image list
          - ctr run docker.io/library/hello-world:latest demo
          - ctr container list
          - ctr image remove docker.io/library/hello-world:latest
          - ctr container remove demo
    docker:
      ^: https://docs.docker.com/reference/
      cli:
        ^: https://github.com/docker/cli
        example:
          run-container-endlessly: docker run --name alpine --rm --detached --publish 3000:80 golang:alpine sleep infinity
          shell-into-container: docker exec -it alpine sh
          override-entrypoint:  docker run --platform linux/amd64 -it --entrypoint /bin/bash 1234567890.dkr.ecr.us-west-2.amazonaws.com/my_image:my_tag -c "my-override-command" 
      compose: https://github.com/docker/compose
    oci: open container initiative
    pause-container: https://www.ianlewis.org/en/almighty-pause-container
    runsc: https://gvisor.dev/docs/
  helm:
    public-charts: https://artifacthub.io/
    common-expression-language: https://github.com/google/cel-spec/blob/master/doc/intro.md
    example:
      repo-add: helm repo add repo_name https://chartmuseum.example.com
      template: helm template my_test my_repo/my_chart --version 1.0.0 --values values.yaml # https://chartmuseum.example.com/api/charts/my_chart/1.0.0
      upgrade-with-install: helm upgrade --install my_test my_repo/my_chart --version 1.0.0 --values values.yaml
      rollback: helm rollback my_test 1
  kube-api:
    ^: https://kubernetes.io/docs/concepts/overview/kubernetes-api/
    aggregation: https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/apiserver-aggregation/
    example:
      - curl -k https://localhost:6443
    metrics:
      pipeline: https://kubernetes.io/docs/tasks/debug/debug-cluster/resource-metrics-pipeline/#metrics-api
      server: https://github.com/kubernetes-sigs/metrics-server
  kube-proxy:
  kube-schedule:
  kubectl:
    example:
      kube-proxy: kubectl proxy
      change-eks-context: aws eks update-kubeconfig --profile my_aws_profile --region us-west-2 --name cluster_name && kubectl config set-context --current
      change-namespace: kubectl config set-context --current --namespace=my-namespace
      login-shell: kubectl exec -it my_pod_name sh
      get-events: kubectl get events --sort-by='.lastTimestamp'
      list-images: kubectl get pods -o jsonpath='{.items[*].spec.containers[*].image}'
      memory-limits: |
        kubectl get pods -o yaml | yq '.items[] | [{"name": .metadata.name,"container":.spec.containers[].name,"memlimit":.spec.containers[].resources.limits.memory}] | .' -P
      base64-decode-secret:  kubectl get secret my_secret -o yaml | yq '.data.* | @base64d'
      port-forward: kubectl port-forward service/my_service 8080:8080
      logs: kubectl logs -f --previous --all-containers
  kubelet:
  network-model: https://kubernetes.io/docs/concepts/services-networking/#the-kubernetes-network-model
  resources:
    clusterrole:
      example:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: viewer
        rules:
          - apiGroups: ["*"]
            resources:
              ["deployments", "configmaps", "pods", "secrets", "services"]
            verbs: ["get", "list", "watch"]
    clusterrolebinding:
      example:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: my-viewer-binding
        roleRef:
          kind: ClusterRole
          name: viewer
          apiGroup: rbac.authorization.k8s.io
        subjects:
          - kind: Group
            name: my-viewer
            apiGroup: rbac.authorization.k8s.io
    crd:
      ^: custom resource definition https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/
      operator-pattern: https://kubernetes.io/docs/concepts/extend-kubernetes/operator/
    deployment:
      example:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: myapp
          namespace: 3-example
        spec:
          selector:
            matchLabels:
              app: myapp
          template:
            metadata:
              labels:
                app: myapp
            spec:
              containers:
                - name: myapp
                  image: aputra/myapp-195:v2
                  ports:
                    - name: http
                      containerPort: 8080
                  resources:
                    requests:
                      memory: 256Mi
                      cpu: 100m
                    limits:
                      memory: 256Mi
                      cpu: 100m
    event:
      - https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/ Events such as the ones you saw at the end of kubectl describe pod are persisted in etcd and provide high-level information on what is happening in the cluster
      - https://www.youtube.com/watch?v=K-F-p-ekSsM&t=737s
      - https://github.com/vmware-archive/eventrouter/blob/master/main.go#L111
    hpa:
      example:
        apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata:
          name: myapp
          namespace: 3-example
        spec:
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: myapp
          minReplicas: 1
          maxReplicas: 5
          metrics:
            - type: Resource
              resource:
                name: cpu
                target:
                  type: Utilization
                  averageUtilization: 80
            - type: Resource
              resource:
                name: memory
                target:
                  type: Utilization
                  averageUtilization: 70
    ing:
      controller:
        nginx:
        gloo:
    namespace:
      example:
        apiVersion: v1
        kind: Namespace
        metadata:
          name: 3-example
    pod: https://www.ianlewis.org/en/what-are-kubernetes-pods-anyway
    pvc:
    service:
      example:
        apiVersion: v1
        kind: Service
        metadata:
          name: myapp
          namespace: 3-example
        spec:
          ports:
            - port: 8080
              targetPort: http
          selector:
            app: myapp
      type:
        NodePort:
        ClusterIP:
        None:
          alias: "headless"
    storageclass:
    sts:
    role:
    volume:
  service-mesh:
    istio: https://istio.io/latest/about/service-mesh/#what-is-a-service-mesh
    linkerd:
  type:
    eks:
    gke:
    kops:
    kubeadm: https://kubernetes.io/docs/reference/setup-tools/kubeadm/ https://github.com/kubernetes/kubernetes/tree/master/cmd/kubeadm
    k3s:
      ^: https://docs.k3s.io/
      config: https://docs.k3s.io/reference/server-config
      logs: https://medium.com/kubernetes-tutorials/cluster-level-logging-in-kubernetes-with-fluentd-e59aa2b6093a
      storage: https://docs.k3s.io/storage
    rke:
      ^: rancher kubernetes engine
linux:
  ^: https://www.kernel.org/doc/html/latest/
  shell:
    ^: https://www.tutorialspoint.com/unix/unix-what-is-shell.htm
    bash: bourne-again-shell https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html
    background-process:
      ^: https://linuxhint.com/send-process-background-linux/
      characer: "&"
    pipe:
      character: "|"
    redirect:
      character: ">"
      example:
        - command 2> error.txt 1> output.txt
        # redirect background process
        - command > output_file 2>&1 &
    io-file-descriptor:
      stdin: 0
      stdout: 1
      stderr: 2
  command:
    alias: https://tldp.org/LDP/abs/html/aliases.html
    anacrontab: https://www.man7.org/linux/man-pages/man5/anacrontab.5.html
    aws: 
      example:
        aws-sso-login: aws sso login
        ecr-login: aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 1234567890.dkr.ecr.us-west-2.amazonaws.com
        s3-audit: aws s3 ls s3://my_bucket/my_directory --recursive --summarize
        s3-api-audit: aws s3api list-objects --bucket my_bucket --prefix my_directory/my_path | jq -r '.Contents[].Key' | wc
        s3-cp: aws s3 cp /tmp/my_file s3://my_bucket/my_directory
        describe: aws rds describe-db-cluster-parameters --db-cluster-parameter-group-name my_param_group --query 'Parameters[].[ParameterName, ParameterValue]'"
        cloudtrail-events: aws cloudtrail lookup-events --lookup-attributes AttributeKey=ReadOnly,AttributeValue=false
        rds-events: aws logs filter-log-events --log-group-name /aws/rds/cluster/my-cluster/general --start-time $MS_EPOCH_5_MIN_AGO --filter-pattern "DELETE" | yq -P '.events.[].message'
        eks-events: aws logs filter-log-events --log-group-name /aws/eks/my-cluster/cluster --start-time $MS_EPOCH_5_MIN_AGO --filter-pattern "{ ($.objectRef.namespace = my-namespace) && ($.objectRef.resource = events) && ($.requestObject.message != \"*already present on machine\") && ($.requestObject.message != \"Readiness probe failed:*\")}" | yq -P '.events[].message' | yq -p=json -o tsv '[.stageTimestamp,.auditID,.objectRef.name,(.responseObject.message // .requestObject.message)]' # ($.user.username != \"system:serviceaccount:kube-system:horizontal-pod-autoscaler\") # ($.verb != watch)
    compgen:
      list-all-available-commands: compgen -ac
    crontab: https://man7.org/linux/man-pages/man5/crontab.5.html
    du:
      ^: disk usage
      example:
        - du -had 2 /etc | sort -h
    find:
      example:
        file-count: find . -type f | wc -l
    git:
      ^: https://github.com/git/git https://mirrors.edge.kernel.org/pub/software/scm/git/
      cli:
        ^: https://git-scm.com/docs
        common-commands: http://guides.beanstalkapp.com/version-control/common-git-commands.html
        commit: git commit -m "message" && git push
        config: git config --global user.name "John Doe" && git config --global user.email
        word-diff: git diff --word-diff=color --word-diff-regex=. --no-index original_file new_file
        log: git log --oneline
        checkout: git checkout -b new-branch
        reset-local: git reset HEAD~1
        reset-remote: git reset HEAD~1 && git push origin -f
        revert-local: git revert HEAD
        squash-commits: git rebase -i HEAD~3
        abort-merge: git merge --abort
        abort-changes: git checkout -- .
        remove-local-branch: git branch -d branch-name
        remove-remote-branch: git push origin --delete branch-name
        remove-local-tag: git tag -d tag-name
        remove-remote-tag: git push origin :tag-name
      github:
        ^: https://docs.github.com/en
        actions:
        cli:
          ^: https://cli.github.com/manual/gh_help_reference
        language-stats: https://madnight.github.io/githut/
    grep:
      ^: https://regex101.com/
      example:
        regex-search-directory-json-files: grep -irE "match1|match2" my_dir/**/my_filename-*.json
        exclude-with-negative-look-behind: grep -E "(?<!word_to_exclude)word_to_search_for"
    ln:
      create-sym-link: ln -s /path/to/file /path/to/symlink
    ls:
      example:
        - ls -thal
    openssl:
      example:
        random-string-10-bytes: openssl rand -base64 10
        encrypt-symmetrci: tar -czf - pkg | openssl enc -aes256 -out pkg.tar.gz
        decrypt-symmetric: openssl enc -d -aes256 -in pkg.tar.gz | tar -xz
        base64-encrypt: tar -czf - pkg | openssl enc -aes256 | base64 > enc.txt
        base64-decrypt: cat enc.txt | base64 -d | openssl enc -d -aes256 | tar -xz
        generate-rsa-private-key: openssl genrsa -out /tmp/private-key.pem 3072
        generate-rsa-public-key: openssl rsa -in /tmp/private-key.pem -pubout -out /tmp/public-key.pem
        encrypt-b64: openssl pkeyutl -encrypt -pubin -inkey /tmp/public-key.pem -in /tmp/secret | base64 > /tmp/secret_encrypted_b64
        decrypt-b64: cat /tmp/secret_encrypted_b64 | base64 -D | openssl pkeyutl -decrypt -inkey /tmp/private-key.pem
    ptrace:
    scp:
      example:
        sftp-copy-upload: scp -r ./my_directory my_user@s-b75bdaa308234dcee.server.transfer.us-west-2.amazonaws.com:/my_target_directory
    shasum:
      example:
        hash-base64: echo "content to hash" | shasum -a 512 - | shasum - | xxd -r -p | base64 | sed "s/\//-/g" | sed "s/\+/\_/g" | tr -d "= "
    ssh:
      - https://carlosbecker.dev/posts/ssh-tips-and-tricks/
    strace:
    systemctl:
    vault:
      example:
        get-secret: vault read my_env/data/my_secret -format=json | yq .data.data.MY_KEY | base64 -d > /tmp/secret-value
    watch:
      example:
        view-open-sockets: watch -n 0.2 "date +%s.%N && lsof -i"
  filesystem:
    directories:
      normal:
        boot:
        bin:
        etc:
          /etc/hosts:
          /etc/crontab:
            ^: https://www.man7.org/linux/man-pages/man8/cron.8.html
          /etc/anacrontab:
            ^: https://www.man7.org/linux/man-pages/man8/anacron.8.html
        home:
        mount:
        opt:
        root:
        run: https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s15.html
        srv:
        tmp:
        usr:
          bin:
          include:
          lib:
          lib32:
          lib64:
          libexec:
          libx32:
          local:
          sbin:
          shared:
          src:
        var:
      virtual:
        dev:
        proc:
        sys:
      sym-linked:
        bin: /usr/bin
        lib: /usr/lib
        lib32: /usr/lib32
        lib64: /usr/lib64
        libx32: /usr/libx32
        sbin: /usr/sbin
    ext4: https://ext4.wiki.kernel.org/index.php/Ext4_Howto
    inode: https://www.redhat.com/sysadmin/inodes-linux-filesystem
  hardware:
    spi: Serial Peripheral Interface https://docs.kernel.org/spi/spi-summary.html
    notes:
      - https://discord.com/blog/how-discord-supercharges-network-disks-for-extreme-low-latency
  kernel:
    ^: https://github.com/torvalds/linux
    ebpf:
      ^: https://ebpf.io/what-is-ebpf
      bpftrace:
        example:
          hello-world: bpftrace -e 'BEGIN { printf("hello world\n") }'
          list-probes: bpftrace -l 'tracepoint:syscalls:sys_enter_*'
          syscall-counts-by-process: bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count() }'
          file-opens: bpftrace -e 'tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)) }'
          distribution-of-read-bytes: bpftrace -e 'tracepoint:syscalls:sys_exit_read /pid == 18644/ { @bytes = hist(args->retval) }'
          kernel-dynamic-tracing-read-bytes: bpftrace -e 'kretprobe:vfs_read { @bytes = lhist(retval, 0, 2000, 200) }'
          timing-reads: bpftrace -e 'kprobe:vfs_read { @start[tid] = nsecs } kretprobe:vfs_read /@start[tid]/ { @ns[comm] = hist(nsecs - @start[tid]); delete(@start[tid]) }'
          count-process-level-events: bpftrace -e 'tracepoint:sched:sched* { @[name] = count() } interval:s:5 { exit() }'
          profile-on-CPU-kernel-stacks: bpftrace -e 'profile:hz:99 { @[stack] = count() }'
          scheduler-tracing: bpftrace -e 'tracepoint:sched:sched_switch { @[stack] = count() }'
          block-io-tracing: bpftrace -e 'tracepoint:block:block_rq_issue { @ = hist(args->bytes); }
    syscall: https://man7.org/linux/man-pages/man2/syscalls.2.html
    cgroup:
      ^: >
        control groups for dynamically limit and monitor cpu, memory, disk, and network resource limits on processes.
        Processes can use more than their cgroup limits as long as their is no resource contention.
      example:
        - cat /sys/fs/cgroup/cpu/tasks
        - cat /proc/3378/cgroup
        - https://www.linuxjournal.com/content/everything-you-need-know-about-linux-containers-part-i-linux-control-groups-and-process
  practice:
    - compile a basic C program then create an encrypted archive and upload it to s3
    - run a nodejs container then find its file directory
    - list largest files in a directory
    - find the docker service, find the service using the most memory
    - list ip addresses and tables
    - monitor open sockets and the epoch date down to nano seconds
    - list all root directories and diff results
    - install yq and list all instances of "sql" in notes.yaml
    - list all keys in notes.yaml as a single csv line
    - print a random string and random big int every second
    - print contents of hosts, resolve, certificates, crontab, anacrontab

  # install docker
  # create an eks cluster and install prometheus and grafana
  # create a k3s cluster and install prometheus and grafana
  # create a tcpdump systemd service
  process:
    exit-code: https://richardsnider.github.io/notes/linux.process.exit-code.yaml
  storage:
    iops:
  user-space:
    ^: user data https://en.wikipedia.org/wiki/User_space_and_kernel_space
    dist:
      ^: distribution https://en.wikipedia.org/wiki/Linux_distribution
      alpine:
        busybox: https://github.com/mirror/busybox
      debian:
        ubuntu:
      redhat:
        centos:
    user-data:
    virtual-memory:
network:
  control-plane: https://en.wikipedia.org/wiki/Control_plane
  data-plane: https://en.wikipedia.org/wiki/Data_plane
  ietf:
    ^: Internet Engineering Task Force https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force
    rfc:
      ^: Request for Comments https://en.wikipedia.org/wiki/Request_for_Comments
      1918: private network address allocations https://www.rfc-editor.org/rfc/rfc1918
  interface:
    nic: https://en.wikipedia.org/wiki/Network_interface_controller
    vif: https://en.wikipedia.org/wiki/Virtual_network_interface
  ip:
    packet:
      ^: https://www.baeldung.com/cs/networking-packet-fragment-frame-datagram-segment
      explanation: A TCP segment is carried in one or more IP packets, which are each carried in one or more Ethernet frames.
      ipv4:
        address:
        cidr:
        header:
      ipv6:
        address:
        cidr:
        header:
        tunnel:
      fragment:
      protocol-number: https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers
      ospf:
        ^: https://en.wikipedia.org/wiki/Open_Shortest_Path_First
        protocol-number: 89
      icmp:
        notes:
          - https://www.cloudflare.com/learning/ddos/glossary/internet-control-message-protocol-icmp/
          - https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol
          - >
            Although ICMP messages are contained within standard IP packets, 
            ICMP messages are usually processed as a special case, distinguished from normal IP processing.
        ping:
      transport:
        datagram:
          segment:
        port:
        socket: https://en.wikipedia.org/wiki/Network_socket
        tcp:
          header:
          connection:
            session:
          protocol:
            bgp:
              ^: https://www.cloudflare.com/learning/security/glossary/what-is-bgp/
              port: 179
              notes:
                - The initiating router uses a dynamic source port, but the destination port is 179. https://www.ciscopress.com/articles/article.asp?p=2756480&seqNum=4
            http:
              ^: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP
              http/1.1:
              http/2:
                ^: https://www.upwork.com/resources/what-is-http2
                description: response multiplexing, binary instead of textua
                grpc:
                  - can't be used in a browser out-of-the-box https://grpc.io/blog/state-of-grpc-web/
                  - https://github.com/grpc-ecosystem/grpc-gateway
              headers:
                ^: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers
                cors:
                  ^: Cross-Origin Resource Sharing https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
                  example:
                    wildcard-header: "Access-Control-Allow-Origin: *"
                    single-domain-header: "Access-Control-Allow-Origin: https://example.com"
              mime:
                ^: Multipurpose Internet Mail Extensions https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types
                header: Content-Type
              port: 80
              url:
                ^: https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL
            https:
              port: 443
            ssh:
              port: 22
            tls/ssl:
        udp:
          connectionless: true
          protocol:
            dhcp: https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol
            dns:
              ^: domain name service https://www.rfc-editor.org/rfc/rfc1035
              dns-flood:
                ^: https://www.cloudflare.com/learning/ddos/dns-flood-ddos-attack/
              fqdn:
                ^: fully qualified domain name
              port: 53
            http/3:
              ^: QUIC https://en.wikipedia.org/wiki/HTTP/3
            rip:
              ^: https://en.wikipedia.org/wiki/Routing_Information_Protocol
              port: 520
            traceroute:
              port: 33434 + (max-ttl * numberofprobes - 1)
              notes:
                - must use "-I" option to actually use ICMP
            wireguard:
              ^: https://www.wireguard.com/protocol/
              port: 51820
              notes:
                - configure to use port 53 in because DNS is allowed on most networks https://github.com/trailofbits/algo/pull/1594
    socket:
      golang-dial: https://pkg.go.dev/net@latest#Dial
      syscall-name: socket()
      syscall-constant:
        SOCK_DGRAM:
        SOCK_STREAM:
    routing:
      ^: https://www.cloudflare.com/learning/network-layer/what-is-routing/
      firewall:
        ^:
          - https://www.cloudflare.com/learning/security/what-is-a-firewall/
          - https://www.bu.edu/tech/about/security-resources/host-based/intro/
        example:
          - https://github.com/pfsense/pfsense
      networking-mode:
        ^: https://docs.oracle.com/en/virtualization/virtualbox/6.0/user/networkingmodes.html
        bridged:
        nat:
          ^: network address translations
          notes:
            - http://www.ciscozine.com/nat-and-pat-a-complete-explanation/
            - https://avinetworks.com/glossary/network-address-translation/
          pat:
            ^: layer 4 (transport) port address translation, the most common form of nat
            port-forwarding:
            vip: https://en.wikipedia.org/wiki/Virtual_IP_address
            example:
              netfilter-iptables-nftables: linux packet filter
      router:
        cisco:
      subnet:
        cidr:
        lan: https://en.wikipedia.org/wiki/Local_area_network
        mask: [ /32: 1, /31: 2, /30: 4, /29: 8, /28: 16, /27: 32, /26: 64, /25: 128, /24: 256, /23: 512, /22: 1024, /21: 2048, /20: 4096,  ]
        wan: https://en.wikipedia.org/wiki/Wide_area_network
      vpn:
        ^: virtual private network
        openvpn: https://en.wikipedia.org/wiki/OpenVPN
        ipsec:
        wireguard:
          unofficial-docs: https://github.com/pirate/wireguard-docs
          videos:
            - https://www.youtube.com/watch?v=88GyLoZbDNw
            - https://www.youtube.com/watch?v=iVal1M3SLNI&t=1185s
          tailscale:
            ^: https://tailscale.com/kb/
            cidr-block: 100.64.0.0/10
            source-code:
              - https://github.com/tailscale/tailscale/blob/main/wgengine/wgcfg/device.go
              - https://github.com/tailscale/tailscale/blob/main/ipn/doc.go
              - https://github.com/tailscale/tailscale/blob/main/safesocket/unixsocket.go
  programming: https://beej.us/guide/bgnet/html/index-wide.html
  osi:
    ^: Open Systems Interconnection model https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/
    layer:
      1:
        ^: https://osi-model.com/physical-layer/
        involves: [ethernet, fiber, wifi]
      2:
        ^: https://osi-model.com/data-link-layer/
        involves: [frames, switches, tunnels]
      3:
        ^: https://osi-model.com/network-layer/
        involves: [ip, nat, routers, vpn (data-plane)]
      4:
        ^: https://osi-model.com/transport-layer/
        involves:
          [ports, pat, icmp, tcp, tcp sessions, udp, vpn (control-plane)]
      5:
        ^: https://osi-model.com/session-layer/
        involves: []
      6:
        ^: https://osi-model.com/presentation-layer/
        involves: []
      7:
        ^: https://osi-model.com/application-layer/
        involves: [http, https, ssl, tls]
  topology: https://www.educba.com/types-of-network-topology/
  tunnel:
  wifi:
    wlan:
      wlan:
      wlan2:
      wlan3:
security:
  ^: https://www.cloudflare.com/learning/security/what-is-web-application-security/
  attacks:
    ddos: distributed denial of service https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/
    phishing:
      example:
        - twilio signal phishing attack https://support.signal.org/hc/en-us/articles/4850133017242
        - https://blog.cloudflare.com/2022-07-sms-phishing-attacks/
  authoritative:
  incidents:
    - https://blog.lastpass.com/2022/08/notice-of-recent-security-incident/
  okta:
  ssl:
    ^: https://www.cloudflare.com/learning/ssl/what-is-ssl/
    lets-encrypt: https://letsencrypt.org/how-it-works/
    certificate-authority: https://github.com/letsencrypt/boulder
  sso:
    ^: single sign on https://www.cloudflare.com/learning/access-management/what-is-sso/
  tls:
    ^: https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/
  totp:
    ^: https://www.twilio.com/docs/glossary/totp
  waf:
    ^: https://www.cloudflare.com/learning/ddos/glossary/web-application-firewall-waf/
uncategorized:
  - Conflict-Free Replicated Data Type (CRDT) https://github.com/automerge/automerge
  - WLAN Sensing
  - deepfake zoom call detection, turn sideways https://news.ycombinator.com/item?id=32385555
  - cellular network bioelectric signals physiological software layer https://www.youtube.com/watch?v=Z-9rLlFgcm0
  - https://en.wikipedia.org/wiki/Solar_Foods
  - map generator https://github.com/tepperly/Azimuthal
  - stable diffusion text-to-image https://news.ycombinator.com/item?id=32634074
  - lightweight VM "microVM" https://github.com/firecracker-microvm/firecracker
  - https://github.com/jitsi/jitsi-meet
  - https://codeburst.io/prometheus-by-example-4804ab86e741
  - https://www.tigera.io/learn/guides/prometheus-monitoring/prometheus-kubernetes/
  - https://kubernetes.io/docs/concepts/cluster-administration/system-metrics/
  - https://github.com/kubernetes/kubernetes/blob/1be1ec4aa3e0270d591b33024532c8fd3ba8ab08/staging/src/k8s.io/component-base/metrics/histogram.go
  - https://docs.ranchermanager.rancher.io/v2.5/faq/container-network-interface-providers
  - https://github.com/open-telemetry/opentelemetry-go/tree/main/exporters/otlp
  - https://stackoverflow.com/questions/52029656/how-to-retrieve-kubernetes-metrics-via-client-go-and-golang
  - https://kubernetes.io/docs/tasks/debug/debug-cluster/resource-metrics-pipeline/#metrics-api
  - https://levelup.gitconnected.com/how-to-watch-for-file-change-in-golang-4d1eaa3d2964
  - https://github.com/vladimirvivien/k8s-client-examples/blob/master/go/podlist/maing.go
  - https://github.com/prometheus/prometheus/blob/main/discovery/kubernetes/node.go
  - https://gist.github.com/groob/a70af7e7ed3567eb6b6801f65c7a1393
  - https://groob.io/tutorial/go-github-webhook/
  - https://www.artstation.com/rutkowski
  - https://pub.towardsai.net/stable-diffusion-based-image-compresssion-6f1f0a399202
  - https://justine.lol/cosmopolitan/functions.html
  - https://type-level-typescript.com/
  - https://github.com/junegunn/fzf
  - https://crawshaw.io/blog/thankful-for-technology
  - https://github.com/zcalusic/sysinfo/blob/master/bios.go
  - https://github.com/zcalusic/sysinfo
  - https://github.com/microsoft/vscode-extension-samples/tree/main/tree-view-sample
  - https://mtlynch.io/litestream/
  - https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset/tags?page=1&name=s3
  - https://github.com/fluent/fluentd-kubernetes-daemonset/blob/master/fluentd-daemonset-syslog.yaml
  - https://sesar.di.unimi.it/corsi/sistemi/Lezioni/M2/M2_U4_DEF/complementiNAT.pdf
  - https://networkengineering.stackexchange.com/questions/3145/what-layer-of-the-osi-model-does-nat-work
  - https://justinjaffray.com/what-does-write-skew-look-like/
  - https://materialize.com/blog/kafka-is-not-a-database/
  - https://www.youtube.com/watch?v=7K0gAYmWWho
  - https://www.youtube.com/watch?v=BlzRx6ROiX0
  - https://letsencrypt.org/how-it-works/
  - https://github.com/stefansundin/aws-rotate-key
  - https://tailscale.com/blog/tailscale-ssh/
  - https://yourbasic.org/golang/create-image/
  - https://github.com/dwhitena/gophernet/blob/master/main.go
  - https://www.freecodecamp.org/news/how-to-create-a-neural-network-in-javascript-in-only-30-lines-of-code-343dafc50d49/
  - https://webrtc.github.io/samples/src/content/capture/canvas-pc/
  - https://github.com/g3n/engine
  - https://marmoset.co/posts/basic-theory-of-physically-based-rendering/
  - https://github.com/pion/webrtc/blob/master/examples/play-from-disk/main.go
  - https://blog.container-solutions.com/10-predictions-for-the-future-of-computing
  - https://github.com/fastly/compute-actions
  - https://developers.cloudflare.com/workers/
  - https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/#customized-flags-for-kubernetes-processes
  - https://kubernetes.io/releases/download/
  - https://www.theladders.com/apply4me
  - https://alternativeto.net/list/66/software-used-in-mr-robot/
  - https://www.synthesia.io/features/avatars
  - https://fabianlee.org/
  - https://gitlab.com/gitlab-org/gitlab-foss/-/issues/24935
  - https://book.systemsapproach.org/congestion/tcpcc.html
  - https://github.com/pion/webrtc
  - https://www.youtube.com/watch?v=cKaryf7qp9w
  - https://www.infoq.com/presentations/streaming-databases/
  - https://www.kai-waehner.de/blog/2020/03/12/can-apache-kafka-replace-database-acid-storage-transactions-sql-nosql-data-lake/
  - https://mattwestcott.org/blog/redis-streams-vs-kafka
  - https://blog.vamc19.dev/posts/dockerfile-copy-chmod/
  - https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  - https://kubernetes.io/docs/reference/kubernetes-api/
  - https://kubernetes.io/docs/reference/
  - https://kubernetes.io/docs/reference/glossary/?fundamental=true
  - https://www.datadoghq.com/blog/how-to-collect-and-graph-kubernetes-metrics/
  - https://docs.docker.com/config/containers/runmetrics/
  - https://kubernetes.io/docs/reference/kubectl/cheatsheet/
  - https://medium.com/google-cloud/deploy-to-cloud-run-using-gitlab-ci-e056685b8eeb
  - https://www.trickster.dev/post/decrypting-your-own-https-traffic-with-wireshark/
  - https://medium.com/wasm/compile-and-deploy-an-erc20-contract-on-ewasm-d91d890665e6
  - https://github.blog/2015-09-19-subresource-integrity/
  - https://medium.com/google-cloud/deploy-to-cloud-run-using-gitlab-ci-e056685b8eeb
  - https://docs.gitlab.com/ee/development/cicd/templates.html#template-directories
  - https://cloud.google.com/sdk/gcloud/reference
  - https://github.com/terraform-google-modules/terraform-google-kubernetes-engine/blob/master/examples/simple_autopilot_private/main.tf
  - https://news.ycombinator.com/item?id=23833362
  - https://www.youtube.com/watch?v=ritLB405a8E
  - https://sidbala.com/h-264-is-magic/
  - https://medium.com/cloudzone/gke-networking-options-explained-demonstrated-5c0253415eba
  - https://www.youtube.com/watch?v=GrozSkmVHdw
  - https://github.com/crossplane/provider-gcp/blob/master/examples/gke/gke.yaml
  - https://www.youtube.com/watch?v=3VddZSTPc4Y
  - https://medium.com/google-cloud/deploying-service-or-ingress-on-gke-59a49b134e3b
  - https://medium.com/google-cloud/deploy-to-cloud-run-using-gitlab-ci-e056685b8eeb
  - https://github.com/actions/cache/blob/main/examples.md#node---npm
  - https://github.com/orgs/actions/repositories?q=&type=all&language=&sort=stargazers
  - https://hackernoon.com/create-an-api-to-interact-with-ethereum-blockchain-using-golang-part-1-sqf3z7z
  - https://towardsdev.com/creating-a-simple-ethereum-smart-contract-in-golang-138b9439f64e
  - https://f-droid.org/en/2022/02/28/no-user-accounts-by-design.html
  - https://bitfieldconsulting.com/golang
  - https://watabou.itch.io/
  - https://zulip.com/
  - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html
  - https://portswigger.net/research/top-10-web-hacking-techniques-of-2021
  - https://paulbutler.org/2022/what-does-it-mean-to-listen-on-a-port/
  - https://sha256algorithm.com/
  - https://twitter.com/kelvinfichter/status/1489041221947375616
  - https://github.com/gomidi/midi
  - https://www.youtube.com/watch?v=i8wFExDSZv0
  - https://blog.ujomusic.com/how-to-buy-eth-using-metamask-coinbase-ecffe9ede78e
  - https://github.com/liyue201/gostl
  - https://github.com/charmbracelet/bubbles
  - https://github.com/ewasm/go-ethereum/blob/ewasm/trie/trie.go
  - https://github.com/ewasm/go-ethereum/blob/ewasm/core/types/block.go
  - https://github.com/ethereum/go-ethereum/blob/b1e72f7ea998ad662166bcf23705ca59cf81e925/core/vm/opcodes.go
  - https://gitlab.com/ubports/core/lomiri
  - https://docs.ubports.com/en/latest/appdev/index.html
  - https://github.com/google/gousb
  - https://pine64.com/product/pinephone-beta-edition-with-convergence-package/
  - https://www.ctrl.blog/entry/systemd-service-hardening.html
  - http://matrixmultiplication.xyz/
  - https://gist.githubusercontent.com/lrvick/5ecabfc4bb5a2f55783a/raw/d83753d0eb583adc045dc812bf4531d3f2caae4d/basecampbs.sh
  - https://ciechanow.ski/gps/
  - https://ropsten.etherscan.io/
  - https://medium.com/chainsafe-systems/ethereum-2-0-a-complete-guide-ewasm-394cac756baf
  - https://ewasm.readthedocs.io/en/mkdocs/determining_wasm_gas_costs/
  - https://medium.com/loom-network/understanding-blockchain-fundamentals-part-1-byzantine-fault-tolerance-245f46fe8419
  - https://dev.to/nheindev/build-the-hello-world-of-blockchain-in-go-bli
  - https://www.youtube.com/watch?v=qyj0qEsBZPA
  - https://medium.com/codechain/modified-merkle-patricia-trie-how-ethereum-saves-a-state-e6d7555078dd
  - https://medium.com/chainsafe-systems/ethereum-2-0-a-complete-guide-ewasm-394cac756baf
  - https://github.com/syndtr/goleveldb
  - https://github.com/ethereum/go-ethereum/blob/master/docs/postmortems/2021-08-22-split-postmortem.md
  - https://kauri.io/#communities/Getting%20started%20with%20dapp%20development/understanding-smart-contract-compilation-and-depl/
  - https://hyperledger-fabric.readthedocs.io/en/release-2.2/smartcontract/smartcontract.html
  - https://github.com/hyperledger/burrow
  - https://jsonresume.org/schema/
  - https://ethereum.org/en/developers/tutorials/how-to-write-and-deploy-an-nft/
  - https://golang.google.cn/pkg/os/signal/#example_Notify
  - https://github.com/lizrice/strace-from-scratch/blob/master/main.go
  - https://github.com/torvalds/linux/blob/8cb1ae19bfae92def42c985417cd6e894ddaa047/arch/x86/entry/syscalls/syscall_64.tbl
  - https://stackoverflow.com/questions/4042201/how-does-sigint-relate-to-the-other-termination-signals-such-as-sigterm-sigquit
  - https://github.com/golang/go/blob/master/src/os/file.go#L65
  - https://en.wikipedia.org/wiki/Signal_(IPC)
  - https://github.com/torvalds/linux/blob/master/kernel/bpf/syscall.c
  - https://github.com/cilium/ebpf/blob/70d770f1e5f97263e4e66ffeee928f3aa50eb5d4/prog.go#L393
  - https://www.kernel.org/doc/html/latest/userspace-api/ebpf/syscall.html
  - https://github.com/cilium/ebpf/blob/master/examples/tracepoint_in_go/main.go
  - https://www.youtube.com/watch?v=wf8N0RO81Cs
  - https://www.iana.org/assignments/media-types/media-types.xhtml#application
  - https://httpwg.org/http-core/draft-ietf-httpbis-semantics-latest.html
  - https://nickolinger.com/blog/2021-08-04-you-dont-need-that-cors-request/
  - https://apenwarr.ca/log/20211229
  - https://arxiv.org/abs/2008.11619
  - https://github.community/t/docker-pull-from-public-github-package-registry-fail-with-no-basic-auth-credentials-error/16358/86
  - https://caylent.com/blog/aws/github-actions-on-self-hosted-runners-for-kubernetes
  - https://en.wikipedia.org/wiki/User_space#USERLAND
  - https://en.wikipedia.org/wiki/Shor's_algorithm
  - https://sebastian.itch.io/digital-logic-sim
  - https://www.cloudsavvyit.com/11072/linux-signals-hacks-definition-and-more/
  - https://blog.immersed.team/working-from-orbit-39bf95a6d385
  - https://globe.gl/example/submarine-cables/
  - https://www.dotnetperls.com/convert-map-slice-go
  - https://hak5.org/
  - https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths
  - https://github.com/golang/go/wiki/MutexOrChannel
  - https://farmer.golang.org/
  - https://build.golang.org/
  - https://dwm.suckless.org/
  - https://ns6t.net/word/?page_id=10
  - https://globe.adsbexchange.com/
  - https://developers.google.com/maps/documentation/javascript/examples/map-projection-simple#maps_map_projection_simple-javascript
  - https://ns6t.net/azimuth/
  - https://secrethub.io/integrations/github-actions/
  - https://yourbasic.org/golang/format-parse-string-time-date-example/
  - https://devhints.io/jsdoc
  - https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
  - https://favicon.io/favicon-generator/
  - https://avatars.githubusercontent.com/u/40783698?s=200&v=4
  - https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing
  - https://blog.golang.org/defer-panic-and-recover
  - https://pkg.go.dev/github.com/gorilla/mux#Router
  - https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
  - https://fly.io/blog/the-5-hour-content-delivery-network/
  - https://github.com/rdkr/oniongen-go/blob/master/main.go
  - https://stackoverflow.com/questions/47876997/github-rest-api-full-example
  - https://docs.github.com/en/rest/reference/actions#example-using-registration-token
  - https://www.devdungeon.com/content/packet-capture-injection-and-analysis-gopacket
  - http://www.staroceans.org/kernel-and-driver/eBook.O%27Reilly.-.Understanding.The.Linux.Kernel.pdf
  - https://github.com/pirate/wireguard-docs
  - https://upcloud.com/community/tutorials/get-started-wireguard-vpn/
  - https://www.wireguard.com/quickstart/
  - https://github.com/subspacecommunity/subspace
  - https://www.the-digital-life.com/wireguard-docker/
  - https://sachsenhofer.io/setup-tor-docker-container/
  - https://buoyant.io/2020/12/23/kubernetes-network-policies-with-cilium-and-linkerd/
  - https://www.skiff.org/#referrer=bravesponsor
  - https://www.cncf.io/projects/
  - https://markodenic.com/html-tips/
  - https://github.com/lizrice/strace-from-scratch/blob/master/main.go
  - https://lofi.cafe/
  - https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/counter-vanilla?from-embed=&file=/index.html:914-920
  - https://redux.js.org/introduction/getting-started#basic-example
  - https://www.okta.com/identity-101/saml-vs-oauth/
  - https://stackoverflow.com/questions/750172/how-to-change-the-author-and-committer-name-and-e-mail-of-multiple-commits-in-gi
  - https://sci-hub.se/
  - https://webdesign.tutsplus.com/tutorials/how-to-create-an-open-source-directory-on-github-pages--cms-26225
  - https://www.theplanetstoday.com/index.html
  - https://www.digitalattackmap.com/#anim=1&color=0&country=ALL&list=0&time=18681&view=map
  - https://globe.akamai.com/
  - https://carltheperson.com/posts/10-things-linux
  - https://clerk.dev/
  - https://robotmoon.com/ssh-tunnels/
  - https://docs.unrealengine.com/en-US/SharingAndReleasing/Linux/BeginnerLinuxDeveloper/SettingUpAnUnrealWorkflow/index.html
  - https://github.com/EpicGames/UnrealEngine
  - https://medium.com/dot-debug/running-chrome-in-a-docker-container-a55e7f4da4a8
  - https://blog.landr.com/types-of-synthesis/
  - https://aws.amazon.com/blogs/storage/querying-data-without-servers-or-databases-using-amazon-s3-select/
  - https://www.w3schools.com/cssref/css3_pr_flex-shrink.asp
  - https://css-tricks.com/svg-use-with-external-reference-take-2/
  - https://ciechanow.ski/archives/
  - https://www.protondb.com/
  - https://stackoverflow.com/questions/56108144/using-s3-as-a-database-vs-database-e-g-mongodb
  - https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a
  - https://iconmonstr.com/
  - https://www.descript.com/overdub
  - https://threatmap.checkpoint.com/
  - https://cybermap.kaspersky.com/
  - https://livemap.pingdom.com/
  - https://ss2.climatecentral.org/
  - https://github.blog/2020-11-16-standing-up-for-developers-youtube-dl-is-back/
  - https://www.howtogeek.com/465350/everything-you-ever-wanted-to-know-about-inodes-on-linux/
  - https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/#what-is-a-system-call
  - https://stackoverflow.com/questions/33963467/parse-http-requests-and-responses-from-text-file-in-go
  - https://www.pauladamsmith.com/blog/2016/04/max-clients-go-net-http.html
  - https://promiseauthentication.org/
  - https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications
  - https://www.howtogeek.com/117435/htg-explains-the-linux-directory-structure-explained/
  - https://www.quantamagazine.org/computer-scientists-achieve-crown-jewel-of-cryptography-20201110/
  - https://yqnn.github.io/svg-path-editor/
  - https://www.mgasch.com/post/scratch/
  - https://github.com/surma/gobox
  - https://github.com/robertdavidgraham/masscan
  - https://secretgeek.github.io/html_wysiwyg/html.html
  - https://jrl.ninja/etc/1/
  - https://buoyant.io/service-mesh-manifesto/
  - https://aws.amazon.com/blogs/security/how-to-use-g-suite-as-external-identity-provider-aws-sso/
  - https://read.acloud.guru/why-and-how-do-we-build-a-multi-region-active-active-architecture-6d81acb7d208?gi=c38419eb0d95
  - https://github.com/kubernetes-client/javascript/blob/master/src/proto-client.ts
  - https://www.oreilly.com/library/view/http-the-definitive/1565925092/ch04s07.html
  - https://howtonode.org/capturing-packets-in-javascript
  - https://iximiuz.com/en/posts/from-docker-container-to-bootable-linux-disk-image/
  - https://keepvid.pro/en3/youtube-video-downloader
  - https://css-tricks.com/snippets/css/a-guide-to-flexbox/
  - https://medium.com/netscape/a-guide-to-create-a-nodejs-command-line-package-c2166ad0452e
  - http://blog.functorial.com/posts/2018-04-08-Incrementally-Improving-The-DOM.html
  - https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf
  - https://app.codility.com/programmers/
  - https://pkg.go.dev/net@latest#Dial

